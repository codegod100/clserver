---
description: Build process and development workflow
---

# Build Process and Development Workflow

## Build Commands (User Executed)

- **Generate all servers**: `sbcl --script build.lisp`
- **Run basic server**: `node server.js`
- **Run dynamic server**: `node dynamic-server.js`

## Development Workflow

1. **Agent**: Edit Lisp source files ([servers.lisp](mdc:servers.lisp), [package.lisp](mdc:package.lisp))
2. **User**: Run build script to regenerate JavaScript
3. **User**: Test the generated servers
4. Repeat as needed

## Post-Edit: Build Reminder

- After any change to `.lisp` source files, the **User should run**:

  ```bash
  sbcl --script build.lisp
  ```

  This regenerates the output (e.g., `worker.js`, `server.js`, `dynamic-server.js`) so the changes take effect.


## Dependencies

- **Common Lisp**: SBCL or similar implementation
- **Parenscript**: Loaded via Quicklisp
- **Node.js**: For running generated servers

## Build Output

The build process generates:
- `server.js` - Basic HTTP server (port 3000)
- `dynamic-server.js` - Dynamic server with routing (port 3001)

## Testing Endpoints

- Basic: `http://localhost:3000`
- User profiles: `http://localhost:3001/user/{username}`
- Blog posts: `http://localhost:3001/post/{id}`
- API stats: `http://localhost:3001/api/stats`